{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\"5LM#}B7AH4V(|x~10z0T\" x=\"1970\" y=\"-190\"><next><block type=\"v5_control_if_then\" id=\"b42RTT.IxGg7_Pbkt!`X\"><value name=\"CONDITION\"><block type=\"v5_operator_greater_than\" id=\"?9{+Ox;I3{LhmJ5H^LH,\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"3rJvTYHA/#)2dL]zop@e\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_angle_of\" id=\"t:RJ1EWumx~_A##Ya=gQ\"><field name=\"POTENTIOMETER\">PotentiometerA</field><field name=\"UNITS\">deg</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"]IEpsE_]JnRjpk~lPsZE\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"b^vX|E62])^}emK|l(VQ\"><field name=\"DIGITALOUT\">Piston1</field><field name=\"STATE\">high</field><next><block type=\"v5_drivetrain_drive_for\" id=\"Nj]8{N_e#Fpt:4*)))-O\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\";H?JrhSF)K`@k~2~UyNw\"><field name=\"NUM\">24</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"x!7CYDW(.g{`Zd|4H,7/\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Jpu62.%6RY,5Gz/PrI*.\"><field name=\"NUM\">45</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"bn^t$n_+MJ2%rq^*V*8;\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Sl{lL-A0uYG7R0y/HR/j\"><field name=\"NUM\">44</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"iE(7D*})o@}7V?NMvU47\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"%5WN$pi41T]*enSa2jZj\"><field name=\"NUM\">145</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"e+]:~Wpm0j|!eTn;tBc(\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Nb~qx+%kODiv=X#vQ0P9\"><field name=\"NUM\">40</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"P=:C[H](XQ(}ExYSsW)#\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"6zPc(BLs]Ym70GbDxIfQ\"><field name=\"NUM\">8</field></shadow></value><next><block type=\"v5_sensing_set_digital_out\" id=\"je!c;=?:_]4lj4siR2Mo\"><field name=\"DIGITALOUT\">Piston1</field><field name=\"STATE\">low</field><next><block type=\"v5_drivetrain_turn_for\" id=\"n+XIg[o[rk|F=pD3zo(-\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"6MWF2#?0XJoK|j);ede~\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"}Vgpd$bdIu?P3/A*BU`,\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"$HHh=pQ?133FeEgx.y=K\"><field name=\"NUM\">48</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"aP3ON3S*3Q%#c($VJiPn\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"^@0?U]t|,jW@F3l|i]^f\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"xMLpR}NS5xDp6$-%3dgN\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"[F3q=4c1iezq[~U0nD##\"><field name=\"NUM\">32</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"v5_control_if_then\" id=\":hw;w+_]p=VpWC_Z$+5D\"><value name=\"CONDITION\"><block type=\"v5_operator_less_than\" id=\"m}A/c?oYmy(v1.k!H?(3\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\")?(n!3F*RnO~:)[4C$/7\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_angle_of\" id=\"dVwTzD,fLZ](Y?y.+N)8\"><field name=\"POTENTIOMETER\">PotentiometerA</field><field name=\"UNITS\">deg</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"4v-2!i=Hd2s]~6sccGzA\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_drivetrain_set_drive_velocity\" id=\"-9%]@I[U$WpZ2b+n,X^F\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"]+AY4Um|nNZsmTB6|@LM\"><field name=\"NUM\">40</field></shadow></value><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"e_4]rCs1o:#rEWD^1U-v\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"W.}++Q,5L{0c}JYG:_,$\"><field name=\"NUM\">20</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"#3jAH6{^q0Wl?ux`R`lY\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"VYTei*!6naKf`LFiB.Pq\"><field name=\"NUM\">48</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"E##.]4Q,dngJr2yhKp$=\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Nb6Ngy-8kIM$-Jgbbs;K\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"!h=JkyK(nc.#[EjSx7;v\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"_Ne`5vgv265Kt^pKYNuv\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"mc@C34lw=O3C4v#B[w}_\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"fFc4HS|5}|hMLAjHa3B%\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"]%%@w3`]0G3an/?bj($5\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"cuhOWw_c7rfQu%r)UFcj\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"uuvKgV.Hvjj^1o,=%R=Y\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"0}o}72QFopv(P}MvRp8?\"><field name=\"NUM\">40</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"*j~s~lb68)0{I~_)jEsa\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"82KAeVjgBCE5sF{x0kc%\"><field name=\"NUM\">45</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"eSTO%cy*e++TOD?-uYV!\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"v5_control_if_then\" id=\"drc8q_d-fbPQLKP3g2:q\"><value name=\"CONDITION\"><block type=\"v5_operator_equal_to\" id=\"mfUL-?X__z`bL82I0HS;\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"].K_kF.TXa2eggX*%r)f\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_angle_of\" id=\"p.66!E6IFTY#R.m~S*m4\"><field name=\"POTENTIOMETER\">PotentiometerA</field><field name=\"UNITS\">pct</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"hjVR$8t3v%F!RevYi=t1\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_drivetrain_drive_for\" id=\"z`AQ+~aI/-G`Tnfk9Fm0\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"r%3H0!?2F,2}r0lOnH8E\"><field name=\"NUM\">48</field></shadow></value></block></statement></block></next></block></next></block></next></block><block type=\"v5_events_when_autonomous\" id=\"FAizKBT$[Rjiq2NrvWIN\" x=\"1290\" y=\"-150\"></block><block type=\"v5_events_when_driver\" id=\"V6%:!vz8H`j0=3%Wt.zl\" x=\"651\" y=\"-80\"><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"d$ct0:J[H]^6$FVp;qsp\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"P]teB_V!F%yq9l2_f.`9\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"wj/ZM`shq}hzx_]6KtAA\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"_us!W=,n#3#L|wGEwa6D\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\";7qvr@Y;MQJ5jpPL%C#t\"><field name=\"MOTOR\">Lift</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"$f*#!T*{5)4[YV|L7Bv(\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_torque\" id=\";x@B}1tmX}uwY~3}qU.O\"><field name=\"MOTOR\">Lift</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\":;Bpq~r.i]x2=@rmZ:$$\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_torque\" id=\"5h8M)$eK?O$q#D1,u[]f\"><field name=\"MOTOR\">flywheel</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"#w~YV/y6hc67,;Jea4l=\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"Iy]]yl;sIGM4-=V+{|+m\"><field name=\"MOTOR\">flywheel</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"S)J%%Uvaq(wf+~-OWBOt\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_control_forever\" id=\"mz-)|7e}P_g(dc+A8ypo\"><statement name=\"SUBSTACK\"><block type=\"v5_motion_set_motor_stopping\" id=\"^/=Z}UR3`/)JfQ3v{Z~,\"><field name=\"MOTOR\">Lift</field><field name=\"MODE\">hold</field><next><block type=\"v5_control_if_then\" id=\",ca+b`tT3?r^owwD6W6*\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"oc8j,wlFwjiV.~`OkxbC\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"AQ_R3m5(tHMuZJ2fehoC\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_control_if_then\" id=\"DIro3}|Xbx`EMq05I%Tl\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"Abi/^wlle68Vj0hiV[$A\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL1</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"uVK-`d^n=bY/5cZT*30H\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">rev</field></block></statement><next><block type=\"v5_control_if_then\" id=\"U~89n!9CmvVVD]ZEg4w1\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"+4STLlxG(l`(q%w+:0h-\"><value name=\"OPERAND\"><block type=\"v5_operator_or\" id=\"sN.!q)N4~*$Gbzv]7QM6\"><value name=\"OPERAND1\"><block type=\"v5_sensing_pressing_controller\" id=\"ldyK],YT}~=6lT;gaT?B\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL1</field></block></value><value name=\"OPERAND2\"><block type=\"v5_sensing_pressing_controller\" id=\"#eS-mS(;zc/m%Da-4A84\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field></block></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"=9~7Xp~VEKo0A5GK[~4g\"><field name=\"MOTOR\">Lift</field></block></statement><next><block type=\"v5_control_if_then\" id=\"![Y[tM$3cR8vtFGvYp#C\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"{cqF.KD(w*({|}=OyLM3\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonUp</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"`Xq[eL}WH)J~]pDJ9b+1\"><field name=\"MOTOR\">flywheel</field><field name=\"DIRECTION\">rev</field></block></statement><next><block type=\"v5_control_if_then\" id=\"yQQkg!0d{.2`:d|bRE)%\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"nv=2E~W9NZ69aBr7LN++\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"i]{g@)jFdo.yOMKSsOo:\"><field name=\"MOTOR\">flywheel</field><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_control_if_then\" id=\"84VDX4O]%sl@Eu|gP?TY\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"D$h)VD,2M)P5SrL8/GaH\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonRight</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"LO$Iu2qf!DK?A9g`HP6t\"><field name=\"MOTOR\">flywheel</field></block></statement><next><block type=\"v5_control_if_then\" id=\"+p7h}$VIt0=TR]2QpbpB\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"|8h5FdzyKMH)o%VovLD[\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"6,dwA]-%oBai~3X/`T`d\"><field name=\"DIGITALOUT\">Piston1</field><field name=\"STATE\">high</field><next><block type=\"v5_sensing_set_digital_out\" id=\"*!3|R8Jmj~h=naBlG]E@\"><field name=\"DIGITALOUT\">Piston2</field><field name=\"STATE\">high</field></block></next></block></statement><next><block type=\"v5_control_if_then\" id=\"Lpx!BDry=)[N:`~TLxRe\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"0G?!:nsr/fs(IivuQY[u\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"OV;^L*l1QnIb1=r}HFb9\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"v?(goz{B]O*t$!sPoxYq\"><field name=\"DIGITALOUT\">Piston1</field><field name=\"STATE\">low</field><next><block type=\"v5_sensing_set_digital_out\" id=\"m/T~OEKBb},l#Kx.z^S:\"><field name=\"DIGITALOUT\">Piston2</field><field name=\"STATE\">low</field></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_looks_print\" id=\"#Ncv~wvkR3w?^|.pW^/a\" x=\"650\" y=\"350\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"k5Q$0)?Nz.}~fnqEz0I@\"><field name=\"TEXT\"></field></shadow><block type=\"v5_sensing_position_of_shaft_encoder\" id=\"5+*M9x)R7Mu||n3j)TFh\" disabled=\"true\"><field name=\"ENCODER\">EncoderA</field><field name=\"UNITS\">deg</field></block></value></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"split","id":"primary"},"triportSourcePort":22},{"port":[1,2,3,4,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel325in","gear":"ratio18_1","gearRatio":"1:2","direction":"fwd","gyroType":"none","width":"16","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[8],"name":"LiftSwitch1","customName":true,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{"id":"partner"},"triportSourcePort":22},{"port":[7],"name":"LiftSwitch2","customName":true,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{"id":"partner"},"triportSourcePort":22},{"port":[5,6],"name":"Lift","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[16],"name":"flywheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[6],"name":"Piston1","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[5],"name":"Piston2","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[1],"name":"PotentiometerA","customName":false,"deviceType":"Potentiometer","deviceClass":"pot","setting":{"id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.5","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor leftMotorA = motor(PORT1, ratio18_1, false);\nmotor leftMotorB = motor(PORT2, ratio18_1, false);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT3, ratio18_1, true);\nmotor rightMotorB = motor(PORT4, ratio18_1, true);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 299.24, 16, 40, mm, 0.5);\n\nlimit LiftSwitch1 = limit(Brain.ThreeWirePort.H);\nlimit LiftSwitch2 = limit(Brain.ThreeWirePort.G);\nmotor LiftMotorA = motor(PORT5, ratio36_1, true);\nmotor LiftMotorB = motor(PORT6, ratio36_1, false);\nmotor_group Lift = motor_group(LiftMotorA, LiftMotorB);\n\nmotor flywheel = motor(PORT16, ratio6_1, false);\n\ndigital_out Piston1 = digital_out(Brain.ThreeWirePort.F);\ndigital_out Piston2 = digital_out(Brain.ThreeWirePort.E);\npot PotentiometerA = pot(Brain.ThreeWirePort.A);\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller1 = true;\nbool DrivetrainRNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3 + Axis1\n      // right = Axis3 - Axis1\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position() + Controller1.Axis1.position();\n      int drivetrainRightSideSpeed = Controller1.Axis3.position() - Controller1.Axis1.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller1) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller1 = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller1) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  if (PotentiometerA.angle(degrees) > 0.0) {\n    Piston1.set(true);\n    Drivetrain.driveFor(reverse, 24.0, inches, true);\n    Drivetrain.turnFor(right, 45.0, degrees, true);\n    Drivetrain.driveFor(reverse, 44.0, inches, true);\n    Drivetrain.turnFor(left, 145.0, degrees, true);\n    Drivetrain.driveFor(reverse, 40.0, inches, true);\n    Drivetrain.driveFor(forward, 8.0, inches, true);\n    Piston1.set(false);\n    Drivetrain.turnFor(left, 90.0, degrees, true);\n    Drivetrain.driveFor(reverse, 48.0, inches, true);\n    Drivetrain.turnFor(left, 90.0, degrees, true);\n    Drivetrain.driveFor(reverse, 32.0, inches, true);\n  }\n  if (PotentiometerA.angle(degrees) < 0.0) {\n    Drivetrain.setDriveVelocity(40.0, percent);\n    Drivetrain.setTurnVelocity(20.0, percent);\n    Drivetrain.driveFor(reverse, 48.0, inches, true);\n    Drivetrain.turnFor(right, 90.0, degrees, true);\n    Drivetrain.driveFor(reverse, 5.0, inches, true);\n    Drivetrain.driveFor(forward, 5.0, inches, true);\n    Drivetrain.turnFor(right, 100.0, degrees, true);\n    Drivetrain.driveFor(reverse, 40.0, inches, true);\n    Drivetrain.turnFor(left, 45.0, degrees, true);\n    Lift.spin(forward);\n  }\n  if (PotentiometerA.angle(percent) == 0.0) {\n    Drivetrain.driveFor(forward, 48.0, inches, true);\n  }\n  return 0;\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  return 0;\n}\n\n// \"when driver control\" hat block\nint ondriver_drivercontrol_0() {\n  Drivetrain.setTurnVelocity(100.0, percent);\n  Drivetrain.setDriveVelocity(100.0, percent);\n  Lift.setVelocity(100.0, percent);\n  Lift.setMaxTorque(100.0, percent);\n  flywheel.setMaxTorque(100.0, percent);\n  flywheel.setVelocity(100.0, percent);\n  while (true) {\n    Lift.setStopping(hold);\n    if (Controller1.ButtonL2.pressing()) {\n      Lift.spin(forward);\n    }\n    if (Controller1.ButtonL1.pressing()) {\n      Lift.spin(reverse);\n    }\n    if (!(Controller1.ButtonL1.pressing() || Controller1.ButtonL2.pressing())) {\n      Lift.stop();\n    }\n    if (Controller1.ButtonUp.pressing()) {\n      flywheel.spin(reverse);\n    }\n    if (Controller1.ButtonDown.pressing()) {\n      flywheel.spin(forward);\n    }\n    if (Controller1.ButtonRight.pressing()) {\n      flywheel.stop();\n    }\n    if (Controller1.ButtonR1.pressing()) {\n      Piston1.set(true);\n      Piston2.set(true);\n    }\n    if (!Controller1.ButtonR1.pressing()) {\n      Piston1.set(false);\n      Piston2.set(false);\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n  vex::task drive0(ondriver_drivercontrol_0);\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  drive0.stop();\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}